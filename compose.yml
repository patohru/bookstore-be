services:
  database:
    container_name: bookstore-database
    image: postgres:latest
    restart: unless-stopped
    environment:
      POSTGRES_DB: ${DATABASE_DB}
      POSTGRES_USER: ${DATABASE_USER}
      POSTGRES_PASSWORD: ${DATABASE_PASS}
    ports:
      - 5432:5432
    volumes:
      - database:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "sh -c 'pg_isready -U ${DATABASE_USER} -d ${DATABASE_DB}'"]
      interval: 5s
      timeout: 5s
      retries: 3
      start_period: 15s
    networks:
      - network
    profiles:
      - backend
      - deploy

  backend:
    container_name: bookstore-backend
    image: ${REGISTRY}/backend:latest
    restart: unless-stopped
    build: .
    ports:
      - ${PORT}:${PORT}
    environment:
      DATABASE_DB: ${DATABASE_DB}
      DATABASE_USER: ${DATABASE_USER}
      DATABASE_PASS: ${DATABASE_PASS}
      DATABASE_HOST: ${DATABASE_HOST}
      CLIENT_ID: ${CLIENT_ID}
      CLIENT_SECRET: ${CLIENT_SECRET}
      CLIENT_CALLBACK_URL: ${CLIENT_CALLBACK_URL}
      PORT: ${PORT}
    depends_on:
      database:
        condition: service_healthy
    networks:
      - network
    profiles:
      - backend
      - deploy

volumes:
  database:
    name: bookstore-database
    external: true
networks:
  network:
    name: bookstore-network
    external: true
